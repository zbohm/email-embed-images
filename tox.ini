[tox]
envlist =
    clear-coverage
    quality
    py{35,36,37,38}-django{22}-{pure,django}
    compute-coverage
skip_missing_interpreters = True

[testenv]
setenv =
    django: PYTHONPATH = email_embed_images/tests/test_cfg
    django: DJANGO_SETTINGS_MODULE = settings
deps =
    pyfakefs
    requests_mock
    coverage
    django22: django==2.2.*
commands =
    !django: coverage run --parallel-mode -m unittest -v
    django: coverage run --parallel-mode --source=email_embed_images -m django test -v 2 email_embed_images.tests.test_support_for_django

[testenv:clear-coverage]
depends =
extras =
commands =
    coverage erase

[testenv:compute-coverage]
depends =
    py38-django{22}
extras =
parallel_show_output = True
commands =
    coverage combine
    coverage report --show-missing --include=*/tests/* --fail-under=100
    coverage report --show-missing --include=email_embed_images/* --omit=*/tests/*

[testenv:codecov]
depends = clear-coverage
passenv = CI TRAVIS TRAVIS_*
deps = codecov
commands = codecov

[testenv:quality]
basepython = python3
depends =
extras = quality
# Do not fail on first error, but run all the checks
ignore_errors = True
commands =
    isort --check-only --diff email_embed_images
    flake8 --format=pylint --show-source email_embed_images
    pydocstyle email_embed_images
    mypy email_embed_images

[travis]
python =
  3.5: quality, py35-django{22}-{pure,django}, compute-coverage
  3.6: quality, py36-django{22}-{pure,django}, compute-coverage
  3.7: quality, py37-django{22}-{pure,django}, compute-coverage
  3.8.2: quality, py38-django{22}-{pure,django}, compute-coverage, codecov
